<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.group8.dao.OrderDao">

    <insert id="addOrder" parameterType="com.group8.entity.LgTourOrder">
        insert into lg_tour_order (order_id,product_id,order_choose,order_payout_status,comment_id) values (null,#{productId},#{orderChoose},#{orderPayoutStatus},#{commentId})
    </insert>

    <select id="getActivityById" parameterType="int" resultType="LgSalesPromotionActivity">
        select * from lg_sales_promotion_activity where activity_id = #{activityId}
    </select>

    <update id="deductInventory" parameterType="int">
        update lg_sales_promotion_activity set inventory = inventory -1 where activity_id = #{activityId} and inventory > 0
    </update>
    
    <select id="getInventory" parameterType="int">
        select inventory from lg_sales_promotion_activity where activity_id = #{activityId}
    </select>

    <select id="getAllActivity" resultType="LgSalesPromotionActivity">
        select * from lg_sales_promotion_activity
    </select>
    
    <update id="updateInventory" parameterType="long">
        update lg_sales_promotion_activity set inventory = #{size} where activity_id = #{activityId}

    </update>

    <select id="getAllOrder" parameterType="LgTourOrder" resultType="LgTourOrder">
        select * from lg_tour_order l
            <where>
                <if test="userId == null">
                    and l.user_id = #{userId}
                </if>
                <if test="productId == null">
                    and l.product_id = #{productId}
                </if>
                <if test="orderStatus == null">
                    and l.order_status = #{orderStatus}
                </if>
            </where>
    </select>
    
    <select id="getNotPayOrder" parameterType="int" resultType="com.group8.dto.UserOrders">
        select o.order_id,o.product_id,g.group_name,o.order_starting_time,o.order_amount,o.order_status,o.created_time,
               o.order_payout_status, o.comment_id from lg_tour_order o,lg_group g
        where o.user_id = #{userId} and o.product_id = g.group_id and o.order_payout_status = 0 order by o.created_time desc
    </select>

    <select id="getPayOrder" parameterType="int" resultType="com.group8.dto.UserOrders">
        select o.order_id,o.product_id,g.group_name,o.order_starting_time,o.order_amount,o.order_status,o.created_time,
               o.order_payout_status, o.comment_id from lg_tour_order o,lg_group g
        where o.user_id = #{userId} and o.product_id = g.group_id and o.order_payout_status = 1 order by o.created_time desc
    </select>

    <select id="getAllOrderById" parameterType="int" resultType="com.group8.dto.UserOrders">
        select o.order_id,o.product_id,g.group_name,o.order_starting_time,o.order_amount,o.order_status,o.created_time,
               o.order_payout_status, o.comment_id from lg_tour_order o,lg_group g
        where o.user_id = #{userId} and o.product_id = g.group_id order by o.created_time desc
    </select>

    <select id="getNoCommentOrder" parameterType="int" resultType="com.group8.dto.UserOrders">
        select o.order_id,o.product_id,g.group_name,o.order_starting_time,o.order_amount,o.order_status,o.created_time,
               o.order_payout_status, o.comment_id from lg_tour_order o,lg_group g
        where o.user_id = #{userId} and o.product_id = g.group_id and
              o.comment_id = 0 and o.order_payout_status = 1 order by o.created_time desc
    </select>

    <select id="getNOGoOrder" parameterType="int" resultType="com.group8.dto.UserOrders">
        select o.order_id,g.group_name,o.order_starting_time,o.order_amount,o.order_status from lg_tour_order o,lg_group g
        where o.user_id = #{userId} and o.product_id = g.group_id and o.order_status = 0
    </select>

    <select id="findGroup" parameterType="string" resultType="LgGroup">
        select * from lg_group where group_name like concat('%', #{groupName}, '%')
    </select>
    <select id="findOrderById" resultType="com.group8.entity.LgTourOrder">
        select o.order_id,
               o.product_id,
               o.user_id,
               o.order_child_num,
               o.order_adult_num,
               o.order_choose,
               o.book_name,
               o.book_tel,
               o.order_starting_time,
               o.order_amount,
               o.order_payout_status,
               o.created_time,
               o.comment_id,
               g.group_name from lg.lg_tour_order o, lg.lg_group g where order_id = #{orderId} and o.product_id = g.group_id
    </select>

    <delete id="deleteOrder" parameterType="int">
        delete from lg_tour_order where order_id = #{orderId}
    </delete>
</mapper>