<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.group8.dao.NormalUserDao">

    <insert id="addNormalUser">
        insert into lg.lg_normal_user values (null,
                                              #{normalUser.userName},
                                              #{normalUser.userPassword},
                                              #{normalUser.userEmail},
                                              #{normalUser.userTelphone},
                                              #{normalUser.userHeadImg},
                                              #{normalUser.userIntro},
                                              #{normalUser.userStatus},
                                              #{normalUser.activeCode},
                                              #{normalUser.createdBy},
                                              #{normalUser.createdTime},
                                              #{normalUser.updatedBy},
                                              #{normalUser.updatedTime}
                                              )
    </insert>

    <update id="update">
        update lg.lg_normal_user set user_name = #{normalUser.userName},
                                     user_email = #{normalUser.userEmail},
                                     user_telphone = #{normalUser.userTelphone},
                                     user_intro = #{normalUser.userIntro},
                                     updated_time = #{normalUser.updatedTime}
                               where user_id = #{normalUser.userId}
    </update>

    <delete id="deleteById">
        delete from lg.lg_normal_user where user_id = #{id}
    </delete>

    <select id="findByUsernameAndPwd" resultType="com.group8.entity.LgNormalUser">
        select * from lg.lg_normal_user where user_name = #{userName} and user_password = #{password}
    </select>

    <select id="findByCondition" resultType="com.group8.entity.LgNormalUser">
        select * from lg.lg_normal_user
        <where>
            user_status = '1'
            <if test="!lgNormalUser.userName.equals('')">
                and user_name = #{lgNormalUser.userName}
            </if>
        </where>
    </select>

    <select id="checkActiveCode" resultType="com.group8.entity.LgNormalUser">
        select * from lg.lg_normal_user where active_code = #{code}
    </select>

    <select id="checkUserName" resultType="com.group8.entity.LgNormalUser">
        select * from lg.lg_normal_user where user_name = #{userName}
    </select>

    <select id="findById" resultType="com.group8.entity.LgNormalUser">
        select * from lg.lg_normal_user where user_id = #{id}
    </select>

    <update id="updateUserStatus">
        update lg.lg_normal_user set user_status = 1 where user_id = #{userId}
    </update>

    <insert id="addTravelCollect">
        insert into lg_normal_user_travelnotes_collect values (#{userId},#{notesId},#{collectTime})
    </insert>

    <insert id="addGroupCollect">
        insert into lg_normal_user_group_collect values (#{userId},#{groupId},#{collectTime})
    </insert>

    <insert id="addScenicCollect">
        insert into lg_normal_user_scenicspot_collect values (#{userId},#{scenicId},#{collectTime})
    </insert>

    <select id="findTravelCollects" resultType="com.group8.entity.LgNormalUserTravelnotesCollect">
        select t.notes_id,t.pass_scenicspot
        from lg_travelnotes t ,lg_normal_user_travelnotes_collect c
        where c.user_id = #{userId} and c.notes_id = t.notes_id
    </select>

    <select id="findgroupCollects" resultType="com.group8.entity.LgNormalUserGroupCollect">
        select g.group_id,g.group_name
        from lg_group g ,lg_normal_user_group_collect c
        where c.user_id = #{userId} and c.group_id = g.group_id
    </select>

    <select id="findscenicCollects" resultType="com.group8.entity.LgNormalUserScenicspotCollect">
        select s.scenic_id,s.scenic_name
        from lg_scenicspot s ,lg_normal_user_scenicspot_collect c
        where c.user_id = #{userId} and c.scenic_id = s.scenic_id
    </select>

    <!--<select id="findUserCollects" resultType="com.group8.dto.UserCollects">
        <foreach collection="list" item="collect" separator=",">
            <if test="collect.projectName.equals('scenic')">
                select s.scenic_id,s.scenic_name
                from lg_scenicspot s ,lg_normal_user_scenicspot_collect c
                where c.user_id = #{userId} and c.scenic_id = s.scenic_id
            </if>
        </foreach>
    </select>-->

    <!--<select id="findUserCollects" resultType="com.group8.dto.UserCollects">
        <foreach collection="set" item="name" separator=",">
            <if test="name.contains('scenic')">
                select s.scenic_id,s.scenic_name
                from lg_scenicspot s ,lg_normal_user_scenicspot_collect c
                where c.user_id = #{userId} and c.scenic_id = s.scenic_id
            </if>
            <if test="name.contains('group')">
                select g.group_id,g.group_name
                from lg_group g ,lg_normal_user_group_collect c
                where c.user_id = #{userId} and c.group_id = g.group_id
            </if>
            <if test="name.contains('notes')">
                select t.notes_id,t.pass_scenicspot
                from lg_travelnotes t ,lg_normal_user_travelnotes_collect c
                where c.user_id = #{userId} and c.notes_id = t.notes_id
            </if>
        </foreach>

    </select>-->

    <update id="updateHeadImg">
        update lg.lg_normal_user set user_head_img = #{url} where user_id = #{id}
    </update>

</mapper>
